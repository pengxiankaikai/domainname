package com.pk.domaincheck.domain.mapper;

import com.pk.domaincheck.domain.domain.Userinfo;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface UserinfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbg.generated
     */
    @Delete({
        "delete from userinfo",
        "where userid = #{userid,jdbcType=INTEGER}"
    })
    @Options(useGeneratedKeys = true, keyProperty = "userid")
    int deleteByPrimaryKey(Integer userid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbg.generated
     */
    @Insert({
        "insert into userinfo (userid, username, ",
        "sex, tel, lastlogintime, ",
        "status, wxopenid, addr, ",
        "del_status, createtime)",
        "values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, ",
        "#{sex,jdbcType=BIT}, #{tel,jdbcType=VARCHAR}, #{lastlogintime,jdbcType=TIMESTAMP}, ",
        "#{status,jdbcType=BIT}, #{wxopenid,jdbcType=VARCHAR}, #{addr,jdbcType=VARCHAR}, ",
        "#{delStatus,jdbcType=BIT}, #{createtime,jdbcType=TIMESTAMP})"
    })
    @Options(useGeneratedKeys = true, keyProperty = "userid")
    int insert(Userinfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbg.generated
     */
    @InsertProvider(type=UserinfoSqlProvider.class, method="insertSelective")
    int insertSelective(Userinfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "userid, username, sex, tel, lastlogintime, status, wxopenid, addr, del_status, ",
        "createtime",
        "from userinfo",
        "where userid = #{userid,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="userid", property="userid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="username", property="username", jdbcType= JdbcType.VARCHAR),
        @Result(column="sex", property="sex", jdbcType=JdbcType.BIT),
        @Result(column="tel", property="tel", jdbcType=JdbcType.VARCHAR),
        @Result(column="lastlogintime", property="lastlogintime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.BIT),
        @Result(column="wxopenid", property="wxopenid", jdbcType=JdbcType.VARCHAR),
        @Result(column="addr", property="addr", jdbcType=JdbcType.VARCHAR),
        @Result(column="del_status", property="delStatus", jdbcType=JdbcType.BIT),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP)
    })
    Userinfo selectByPrimaryKey(Integer userid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbg.generated
     */
    @UpdateProvider(type=UserinfoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Userinfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbg.generated
     */
    @Update({
        "update userinfo",
        "set username = #{username,jdbcType=VARCHAR},",
          "sex = #{sex,jdbcType=BIT},",
          "tel = #{tel,jdbcType=VARCHAR},",
          "lastlogintime = #{lastlogintime,jdbcType=TIMESTAMP},",
          "status = #{status,jdbcType=BIT},",
          "wxopenid = #{wxopenid,jdbcType=VARCHAR},",
          "addr = #{addr,jdbcType=VARCHAR},",
          "del_status = #{delStatus,jdbcType=BIT},",
          "createtime = #{createtime,jdbcType=TIMESTAMP}",
        "where userid = #{userid,jdbcType=INTEGER}"
    })
    @Options(useGeneratedKeys = true, keyProperty = "userid")
    int updateByPrimaryKey(Userinfo record);
}